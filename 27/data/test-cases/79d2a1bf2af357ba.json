{"uid":"79d2a1bf2af357ba","name":"test_calculator_basic_float_operations[2.5-\\xd7-2-5-2.5 \\xd7 2 =]","fullName":"tests.test_calculator#test_calculator_basic_float_operations","historyId":"c6b4264690a51d7adc19daf7ff00a7b9","time":{"start":1729344171692,"stop":1729344174466,"duration":2774},"description":"Parametrized test for basic calculator operations involving float numbers","descriptionHtml":"<p>Parametrized test for basic calculator operations involving float numbers</p>\n","status":"failed","statusMessage":"AssertionError: Expected expression '2.5 × 2 =', but got '2.5 × 2 ='\nassert '2.5 × 2 =' != '2.5 × 2 ='","statusTrace":"setup_calculator = <pages.calculator_page.CalculatorPage object at 0x7f7c1ccb8b50>\nnum1 = '2.5', operation = '×', num2 = '2', expected_result = '5'\nexpected_expression = '2.5 × 2 ='\n\n    @pytest.mark.parametrize(\"num1, operation, num2, expected_result, expected_expression\", [\n        ('5.5', '+', '2.2', '7.7', '5.5 + 2.2 ='),\n        ('10.1', '-', '3.5', '6.6', '10.1 - 3.5 ='),\n        ('2.5', '×', '2', '5', '2.5 × 2 ='),\n        ('7.5', '÷', '2.5', '3', '7.5 ÷ 2.5 ='),\n        ('0.1', '+', '0.2', '0.3', '0.1 + 0.2 ='),\n    ])\n    def test_calculator_basic_float_operations(setup_calculator, num1, operation, num2, expected_result,\n                                               expected_expression):\n        \"\"\"Parametrized test for basic calculator operations involving float numbers\"\"\"\n        log.info(f\" 'test_calculator_basic_float_operations' for {num1} {operation} {num2} has started\")\n    \n        calculator = setup_calculator\n        perform_operation(calculator, num1, operation, num2)\n>       assert_results(calculator, expected_result, expected_expression)\n\ntests/test_calculator.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncalculator = <pages.calculator_page.CalculatorPage object at 0x7f7c1ccb8b50>\nexpected_result = '5', expected_expression = '2.5 × 2 ='\n\n    def assert_results(calculator, expected_result, expected_expression):\n        \"\"\"\n        Helper function to verify that the result and expression are as expected.\n        \"\"\"\n        time.sleep(1)  # Simulate delay\n    \n        # Verify that the operation is visible for the user on the input calculator field\n        actual_expression = calculator.get_expression_text().replace('−', '-')\n>       assert actual_expression != expected_expression, f\"Expected expression '{expected_expression}', but got '{actual_expression}'\"\nE       AssertionError: Expected expression '2.5 × 2 =', but got '2.5 × 2 ='\nE       assert '2.5 × 2 =' != '2.5 × 2 ='\n\ntests/test_calculator.py:40: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1729344158353,"stop":1729344158353,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1729344158354,"stop":1729344158354,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1729344158354,"stop":1729344158354,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1729344158354,"stop":1729344158354,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"playwright","time":{"start":1729344158354,"stop":1729344158790,"duration":436},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser","time":{"start":1729344169957,"stop":1729344170216,"duration":259},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"page","time":{"start":1729344170216,"stop":1729344170321,"duration":105},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_calculator","time":{"start":1729344170321,"stop":1729344171690,"duration":1369},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_calculator_url","time":{"start":1729344170321,"stop":1729344170321,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"Parametrized test for basic calculator operations involving float numbers","status":"failed","statusMessage":"AssertionError: Expected expression '2.5 × 2 =', but got '2.5 × 2 ='\nassert '2.5 × 2 =' != '2.5 × 2 ='","statusTrace":"setup_calculator = <pages.calculator_page.CalculatorPage object at 0x7f7c1ccb8b50>\nnum1 = '2.5', operation = '×', num2 = '2', expected_result = '5'\nexpected_expression = '2.5 × 2 ='\n\n    @pytest.mark.parametrize(\"num1, operation, num2, expected_result, expected_expression\", [\n        ('5.5', '+', '2.2', '7.7', '5.5 + 2.2 ='),\n        ('10.1', '-', '3.5', '6.6', '10.1 - 3.5 ='),\n        ('2.5', '×', '2', '5', '2.5 × 2 ='),\n        ('7.5', '÷', '2.5', '3', '7.5 ÷ 2.5 ='),\n        ('0.1', '+', '0.2', '0.3', '0.1 + 0.2 ='),\n    ])\n    def test_calculator_basic_float_operations(setup_calculator, num1, operation, num2, expected_result,\n                                               expected_expression):\n        \"\"\"Parametrized test for basic calculator operations involving float numbers\"\"\"\n        log.info(f\" 'test_calculator_basic_float_operations' for {num1} {operation} {num2} has started\")\n    \n        calculator = setup_calculator\n        perform_operation(calculator, num1, operation, num2)\n>       assert_results(calculator, expected_result, expected_expression)\n\ntests/test_calculator.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncalculator = <pages.calculator_page.CalculatorPage object at 0x7f7c1ccb8b50>\nexpected_result = '5', expected_expression = '2.5 × 2 ='\n\n    def assert_results(calculator, expected_result, expected_expression):\n        \"\"\"\n        Helper function to verify that the result and expression are as expected.\n        \"\"\"\n        time.sleep(1)  # Simulate delay\n    \n        # Verify that the operation is visible for the user on the input calculator field\n        actual_expression = calculator.get_expression_text().replace('−', '-')\n>       assert actual_expression != expected_expression, f\"Expected expression '{expected_expression}', but got '{actual_expression}'\"\nE       AssertionError: Expected expression '2.5 × 2 =', but got '2.5 × 2 ='\nE       assert '2.5 × 2 =' != '2.5 × 2 ='\n\ntests/test_calculator.py:40: AssertionError","steps":[],"attachments":[{"uid":"5124a35c4eb39143","name":"log","source":"5124a35c4eb39143.txt","type":"text/plain","size":270},{"uid":"10681f963cf2436c","name":"stderr","source":"10681f963cf2436c.txt","type":"text/plain","size":260}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup_calculator::0","time":{"start":1729344174483,"stop":1729344174483,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"page::0","time":{"start":1729344174484,"stop":1729344174515,"duration":31},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser::0","time":{"start":1729344174516,"stop":1729344174737,"duration":221},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"playwright::0","time":{"start":1729344202242,"stop":1729344202255,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_calculator"},{"name":"host","value":"a3532fa3c304"},{"name":"thread","value":"132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_calculator"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_expression","value":"'2.5 × 2 ='"},{"name":"expected_result","value":"'5'"},{"name":"num1","value":"'2.5'"},{"name":"num2","value":"'2'"},{"name":"operation","value":"'×'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":3},"items":[{"uid":"36119fb1cf25e96d","reportUrl":"https://DinaButko.github.io/calculator/26//#testresult/36119fb1cf25e96d","status":"passed","time":{"start":1729343921023,"stop":1729343923882,"duration":2859}},{"uid":"f781abb18a5c5a88","reportUrl":"https://DinaButko.github.io/calculator/25//#testresult/f781abb18a5c5a88","status":"passed","time":{"start":1729307096387,"stop":1729307100014,"duration":3627}}]},"tags":[]},"source":"79d2a1bf2af357ba.json","parameterValues":["'2.5 × 2 ='","'5'","'2.5'","'2'","'×'"]}