{"uid":"16fce8ca04872274","name":"test_basic_calculator_operations[5-+-6-11-5 + 6 =]","fullName":"tests.test_calculator#test_basic_calculator_operations","historyId":"c990d76412145a6f6a1b5859941c63e7","time":{"start":1729344349316,"stop":1729344351669,"duration":2353},"description":"Parametrized test for basic calculator operations: addition, subtraction, multiplication, and division","descriptionHtml":"<p>Parametrized test for basic calculator operations: addition, subtraction, multiplication, and division</p>\n","status":"failed","statusMessage":"AssertionError: Expected expression '5 + 6 =', but got '5 + 6 ='\nassert '5 + 6 =' != '5 + 6 ='","statusTrace":"setup_calculator = <pages.calculator_page.CalculatorPage object at 0x7f4835541b10>\nnum1 = '5', operation = '+', num2 = '6', expected_result = '11'\nexpected_expression = '5 + 6 ='\n\n    @pytest.mark.parametrize(\"num1, operation, num2, expected_result, expected_expression\", [\n        ('5', '+', '6', '11', '5 + 6 ='),\n        ('10', '-', '3', '7', '10 - 3 ='),\n        ('100', '×', '100', '10000', '100 × 100 ='),\n        ('50', '÷', '5', '10', '50 ÷ 5 ='),\n    ])\n    def test_basic_calculator_operations(setup_calculator, num1, operation, num2, expected_result, expected_expression):\n        \"\"\"Parametrized test for basic calculator operations: addition, subtraction, multiplication, and division\"\"\"\n        log.info(f\" 'test_basic_calculator_operations' for {num1} {operation} {num2} has started\")\n    \n        calculator = setup_calculator\n        perform_operation(calculator, num1, operation, num2)\n>       assert_results(calculator, expected_result, expected_expression)\n\ntests/test_calculator.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncalculator = <pages.calculator_page.CalculatorPage object at 0x7f4835541b10>\nexpected_result = '11', expected_expression = '5 + 6 ='\n\n    def assert_results(calculator, expected_result, expected_expression):\n        \"\"\"\n        Helper function to verify that the result and expression are as expected.\n        \"\"\"\n        time.sleep(1)  # Simulate delay\n    \n        # Verify that the operation is visible for the user on the input calculator field\n        actual_expression = calculator.get_expression_text().replace('−', '-')\n>       assert actual_expression != expected_expression, f\"Expected expression '{expected_expression}', but got '{actual_expression}'\"\nE       AssertionError: Expected expression '5 + 6 =', but got '5 + 6 ='\nE       assert '5 + 6 =' != '5 + 6 ='\n\ntests/test_calculator.py:40: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1729344343655,"stop":1729344343655,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1729344343655,"stop":1729344343655,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1729344343655,"stop":1729344343655,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1729344343656,"stop":1729344343656,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"playwright","time":{"start":1729344343656,"stop":1729344344083,"duration":427},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser","time":{"start":1729344348274,"stop":1729344348456,"duration":182},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"page","time":{"start":1729344348456,"stop":1729344348513,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_calculator_url","time":{"start":1729344348513,"stop":1729344348513,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_calculator","time":{"start":1729344348514,"stop":1729344349314,"duration":800},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"Parametrized test for basic calculator operations: addition, subtraction, multiplication, and division","status":"failed","statusMessage":"AssertionError: Expected expression '5 + 6 =', but got '5 + 6 ='\nassert '5 + 6 =' != '5 + 6 ='","statusTrace":"setup_calculator = <pages.calculator_page.CalculatorPage object at 0x7f4835541b10>\nnum1 = '5', operation = '+', num2 = '6', expected_result = '11'\nexpected_expression = '5 + 6 ='\n\n    @pytest.mark.parametrize(\"num1, operation, num2, expected_result, expected_expression\", [\n        ('5', '+', '6', '11', '5 + 6 ='),\n        ('10', '-', '3', '7', '10 - 3 ='),\n        ('100', '×', '100', '10000', '100 × 100 ='),\n        ('50', '÷', '5', '10', '50 ÷ 5 ='),\n    ])\n    def test_basic_calculator_operations(setup_calculator, num1, operation, num2, expected_result, expected_expression):\n        \"\"\"Parametrized test for basic calculator operations: addition, subtraction, multiplication, and division\"\"\"\n        log.info(f\" 'test_basic_calculator_operations' for {num1} {operation} {num2} has started\")\n    \n        calculator = setup_calculator\n        perform_operation(calculator, num1, operation, num2)\n>       assert_results(calculator, expected_result, expected_expression)\n\ntests/test_calculator.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncalculator = <pages.calculator_page.CalculatorPage object at 0x7f4835541b10>\nexpected_result = '11', expected_expression = '5 + 6 ='\n\n    def assert_results(calculator, expected_result, expected_expression):\n        \"\"\"\n        Helper function to verify that the result and expression are as expected.\n        \"\"\"\n        time.sleep(1)  # Simulate delay\n    \n        # Verify that the operation is visible for the user on the input calculator field\n        actual_expression = calculator.get_expression_text().replace('−', '-')\n>       assert actual_expression != expected_expression, f\"Expected expression '{expected_expression}', but got '{actual_expression}'\"\nE       AssertionError: Expected expression '5 + 6 =', but got '5 + 6 ='\nE       assert '5 + 6 =' != '5 + 6 ='\n\ntests/test_calculator.py:40: AssertionError","steps":[],"attachments":[{"uid":"1c83275e1a9fb2b2","name":"log","source":"1c83275e1a9fb2b2.txt","type":"text/plain","size":260},{"uid":"8d4e0c03f81e53f9","name":"stderr","source":"8d4e0c03f81e53f9.txt","type":"text/plain","size":251}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup_calculator::0","time":{"start":1729344351710,"stop":1729344351711,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"page::0","time":{"start":1729344351711,"stop":1729344351741,"duration":30},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser::0","time":{"start":1729344351741,"stop":1729344352009,"duration":268},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"playwright::0","time":{"start":1729344392981,"stop":1729344392991,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_calculator"},{"name":"host","value":"7db66effc99e"},{"name":"thread","value":"130-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_calculator"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_expression","value":"'5 + 6 ='"},{"name":"expected_result","value":"'11'"},{"name":"num1","value":"'5'"},{"name":"num2","value":"'6'"},{"name":"operation","value":"'+'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":4},"items":[{"uid":"b09177005f2762c","reportUrl":"https://DinaButko.github.io/calculator/27//#testresult/b09177005f2762c","status":"failed","statusDetails":"AssertionError: Expected expression '5 + 6 =', but got '5 + 6 ='\nassert '5 + 6 =' != '5 + 6 ='","time":{"start":1729344164799,"stop":1729344167321,"duration":2522}},{"uid":"1069422e3dfb6bf1","reportUrl":"https://DinaButko.github.io/calculator/26//#testresult/1069422e3dfb6bf1","status":"passed","time":{"start":1729343913364,"stop":1729343916838,"duration":3474}},{"uid":"ef1b01caf01d6e3d","reportUrl":"https://DinaButko.github.io/calculator/25//#testresult/ef1b01caf01d6e3d","status":"passed","time":{"start":1729307088237,"stop":1729307090846,"duration":2609}}]},"tags":[]},"source":"16fce8ca04872274.json","parameterValues":["'5 + 6 ='","'11'","'5'","'6'","'+'"]}