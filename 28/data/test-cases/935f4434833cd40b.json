{"uid":"935f4434833cd40b","name":"test_basic_calculator_operations[50-\\xf7-5-10-50 \\xf7 5 =]","fullName":"tests.test_calculator#test_basic_calculator_operations","historyId":"5e47b3f4014299b38e05d5e375602cd4","time":{"start":1729344346424,"stop":1729344349101,"duration":2677},"description":"Parametrized test for basic calculator operations: addition, subtraction, multiplication, and division","descriptionHtml":"<p>Parametrized test for basic calculator operations: addition, subtraction, multiplication, and division</p>\n","status":"failed","statusMessage":"AssertionError: Expected expression '50 ÷ 5 =', but got '50 ÷ 5 ='\nassert '50 ÷ 5 =' != '50 ÷ 5 ='","statusTrace":"setup_calculator = <pages.calculator_page.CalculatorPage object at 0x7f21d2c4c1c0>\nnum1 = '50', operation = '÷', num2 = '5', expected_result = '10'\nexpected_expression = '50 ÷ 5 ='\n\n    @pytest.mark.parametrize(\"num1, operation, num2, expected_result, expected_expression\", [\n        ('5', '+', '6', '11', '5 + 6 ='),\n        ('10', '-', '3', '7', '10 - 3 ='),\n        ('100', '×', '100', '10000', '100 × 100 ='),\n        ('50', '÷', '5', '10', '50 ÷ 5 ='),\n    ])\n    def test_basic_calculator_operations(setup_calculator, num1, operation, num2, expected_result, expected_expression):\n        \"\"\"Parametrized test for basic calculator operations: addition, subtraction, multiplication, and division\"\"\"\n        log.info(f\" 'test_basic_calculator_operations' for {num1} {operation} {num2} has started\")\n    \n        calculator = setup_calculator\n        perform_operation(calculator, num1, operation, num2)\n>       assert_results(calculator, expected_result, expected_expression)\n\ntests/test_calculator.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncalculator = <pages.calculator_page.CalculatorPage object at 0x7f21d2c4c1c0>\nexpected_result = '10', expected_expression = '50 ÷ 5 ='\n\n    def assert_results(calculator, expected_result, expected_expression):\n        \"\"\"\n        Helper function to verify that the result and expression are as expected.\n        \"\"\"\n        time.sleep(1)  # Simulate delay\n    \n        # Verify that the operation is visible for the user on the input calculator field\n        actual_expression = calculator.get_expression_text().replace('−', '-')\n>       assert actual_expression != expected_expression, f\"Expected expression '{expected_expression}', but got '{actual_expression}'\"\nE       AssertionError: Expected expression '50 ÷ 5 =', but got '50 ÷ 5 ='\nE       assert '50 ÷ 5 =' != '50 ÷ 5 ='\n\ntests/test_calculator.py:40: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"playwright","time":{"start":1729344343655,"stop":1729344344069,"duration":414},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1729344343655,"stop":1729344343655,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1729344343655,"stop":1729344343655,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1729344343655,"stop":1729344343655,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1729344343655,"stop":1729344343655,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser","time":{"start":1729344344070,"stop":1729344344515,"duration":445},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"page","time":{"start":1729344344515,"stop":1729344344653,"duration":138},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_calculator","time":{"start":1729344344653,"stop":1729344346422,"duration":1769},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_calculator_url","time":{"start":1729344344653,"stop":1729344344653,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"Parametrized test for basic calculator operations: addition, subtraction, multiplication, and division","status":"failed","statusMessage":"AssertionError: Expected expression '50 ÷ 5 =', but got '50 ÷ 5 ='\nassert '50 ÷ 5 =' != '50 ÷ 5 ='","statusTrace":"setup_calculator = <pages.calculator_page.CalculatorPage object at 0x7f21d2c4c1c0>\nnum1 = '50', operation = '÷', num2 = '5', expected_result = '10'\nexpected_expression = '50 ÷ 5 ='\n\n    @pytest.mark.parametrize(\"num1, operation, num2, expected_result, expected_expression\", [\n        ('5', '+', '6', '11', '5 + 6 ='),\n        ('10', '-', '3', '7', '10 - 3 ='),\n        ('100', '×', '100', '10000', '100 × 100 ='),\n        ('50', '÷', '5', '10', '50 ÷ 5 ='),\n    ])\n    def test_basic_calculator_operations(setup_calculator, num1, operation, num2, expected_result, expected_expression):\n        \"\"\"Parametrized test for basic calculator operations: addition, subtraction, multiplication, and division\"\"\"\n        log.info(f\" 'test_basic_calculator_operations' for {num1} {operation} {num2} has started\")\n    \n        calculator = setup_calculator\n        perform_operation(calculator, num1, operation, num2)\n>       assert_results(calculator, expected_result, expected_expression)\n\ntests/test_calculator.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncalculator = <pages.calculator_page.CalculatorPage object at 0x7f21d2c4c1c0>\nexpected_result = '10', expected_expression = '50 ÷ 5 ='\n\n    def assert_results(calculator, expected_result, expected_expression):\n        \"\"\"\n        Helper function to verify that the result and expression are as expected.\n        \"\"\"\n        time.sleep(1)  # Simulate delay\n    \n        # Verify that the operation is visible for the user on the input calculator field\n        actual_expression = calculator.get_expression_text().replace('−', '-')\n>       assert actual_expression != expected_expression, f\"Expected expression '{expected_expression}', but got '{actual_expression}'\"\nE       AssertionError: Expected expression '50 ÷ 5 =', but got '50 ÷ 5 ='\nE       assert '50 ÷ 5 =' != '50 ÷ 5 ='\n\ntests/test_calculator.py:40: AssertionError","steps":[],"attachments":[{"uid":"9833d6e33200cd0e","name":"log","source":"9833d6e33200cd0e.txt","type":"text/plain","size":262},{"uid":"5d5f95a66641ffe8","name":"stderr","source":"5d5f95a66641ffe8.txt","type":"text/plain","size":253}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup_calculator::0","time":{"start":1729344349113,"stop":1729344349113,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"page::0","time":{"start":1729344349114,"stop":1729344349126,"duration":12},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser::0","time":{"start":1729344349127,"stop":1729344349368,"duration":241},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"playwright::0","time":{"start":1729344390566,"stop":1729344390582,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_calculator"},{"name":"host","value":"7db66effc99e"},{"name":"thread","value":"139-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_calculator"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_expression","value":"'50 ÷ 5 ='"},{"name":"expected_result","value":"'10'"},{"name":"num1","value":"'50'"},{"name":"num2","value":"'5'"},{"name":"operation","value":"'÷'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":4},"items":[{"uid":"74d632fe2407ad2c","reportUrl":"https://DinaButko.github.io/calculator/27//#testresult/74d632fe2407ad2c","status":"failed","statusDetails":"AssertionError: Expected expression '50 ÷ 5 =', but got '50 ÷ 5 ='\nassert '50 ÷ 5 =' != '50 ÷ 5 ='","time":{"start":1729344161026,"stop":1729344163726,"duration":2700}},{"uid":"6bb806eb07f4dc5a","reportUrl":"https://DinaButko.github.io/calculator/26//#testresult/6bb806eb07f4dc5a","status":"passed","time":{"start":1729343910411,"stop":1729343913100,"duration":2689}},{"uid":"c33247023f664de2","reportUrl":"https://DinaButko.github.io/calculator/25//#testresult/c33247023f664de2","status":"passed","time":{"start":1729307085272,"stop":1729307088024,"duration":2752}}]},"tags":[]},"source":"935f4434833cd40b.json","parameterValues":["'50 ÷ 5 ='","'10'","'50'","'5'","'÷'"]}