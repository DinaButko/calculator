{"uid":"6d91cad718c1832c","name":"test_calculator_large_number_operations[1000000000000-\\xf7-1000000-1000000-1000000000000 \\xf7 1000000 =]","fullName":"tests.test_calculator#test_calculator_large_number_operations","historyId":"38e206c45086df96527894777b8ce96e","time":{"start":1729344183520,"stop":1729344188269,"duration":4749},"description":"Parametrized test for calculator operations involving large numbers","descriptionHtml":"<p>Parametrized test for calculator operations involving large numbers</p>\n","status":"failed","statusMessage":"AssertionError: Expected expression '1000000000000 ÷ 1000000 =', but got '1000000000000 ÷ 1000000 ='\nassert '1000000000000 ÷ 1000000 =' != '1000000000000 ÷ 1000000 ='","statusTrace":"setup_calculator = <pages.calculator_page.CalculatorPage object at 0x7f7c1ccba2f0>\nnum1 = '1000000000000', operation = '÷', num2 = '1000000'\nexpected_result = '1000000', expected_expression = '1000000000000 ÷ 1000000 ='\n\n    @pytest.mark.parametrize(\"num1, operation, num2, expected_result, expected_expression\", [\n        # Large numbers cases\n        ('1000000000', '+', '2000000000', '3000000000', '1000000000 + 2000000000 ='),\n        ('999999999999', '-', '1', '999999999998', '999999999999 - 1 ='),\n        ('5000000000', '×', '2000000000', '1e+19', '5000000000 × 2000000000 ='),\n        ('1000000000000', '÷', '1000000', '1000000', '1000000000000 ÷ 1000000 ='),\n    ])\n    def test_calculator_large_number_operations(setup_calculator, num1, operation, num2, expected_result,\n                                                expected_expression):\n        \"\"\"Parametrized test for calculator operations involving large numbers\"\"\"\n        log.info(f\" 'test_calculator_large_number_operations' for {num1} {operation} {num2} has started\")\n    \n        calculator = setup_calculator\n        perform_operation(calculator, num1, operation, num2)\n>       assert_results(calculator, expected_result, expected_expression)\n\ntests/test_calculator.py:145: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncalculator = <pages.calculator_page.CalculatorPage object at 0x7f7c1ccba2f0>\nexpected_result = '1000000', expected_expression = '1000000000000 ÷ 1000000 ='\n\n    def assert_results(calculator, expected_result, expected_expression):\n        \"\"\"\n        Helper function to verify that the result and expression are as expected.\n        \"\"\"\n        time.sleep(1)  # Simulate delay\n    \n        # Verify that the operation is visible for the user on the input calculator field\n        actual_expression = calculator.get_expression_text().replace('−', '-')\n>       assert actual_expression != expected_expression, f\"Expected expression '{expected_expression}', but got '{actual_expression}'\"\nE       AssertionError: Expected expression '1000000000000 ÷ 1000000 =', but got '1000000000000 ÷ 1000000 ='\nE       assert '1000000000000 ÷ 1000000 =' != '1000000000000 ÷ 1000000 ='\n\ntests/test_calculator.py:40: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1729344158353,"stop":1729344158353,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1729344158354,"stop":1729344158354,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1729344158354,"stop":1729344158354,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1729344158354,"stop":1729344158354,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"playwright","time":{"start":1729344158354,"stop":1729344158790,"duration":436},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser","time":{"start":1729344181695,"stop":1729344181953,"duration":258},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"page","time":{"start":1729344181953,"stop":1729344182014,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_calculator_url","time":{"start":1729344182015,"stop":1729344182015,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_calculator","time":{"start":1729344182015,"stop":1729344183519,"duration":1504},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"Parametrized test for calculator operations involving large numbers","status":"failed","statusMessage":"AssertionError: Expected expression '1000000000000 ÷ 1000000 =', but got '1000000000000 ÷ 1000000 ='\nassert '1000000000000 ÷ 1000000 =' != '1000000000000 ÷ 1000000 ='","statusTrace":"setup_calculator = <pages.calculator_page.CalculatorPage object at 0x7f7c1ccba2f0>\nnum1 = '1000000000000', operation = '÷', num2 = '1000000'\nexpected_result = '1000000', expected_expression = '1000000000000 ÷ 1000000 ='\n\n    @pytest.mark.parametrize(\"num1, operation, num2, expected_result, expected_expression\", [\n        # Large numbers cases\n        ('1000000000', '+', '2000000000', '3000000000', '1000000000 + 2000000000 ='),\n        ('999999999999', '-', '1', '999999999998', '999999999999 - 1 ='),\n        ('5000000000', '×', '2000000000', '1e+19', '5000000000 × 2000000000 ='),\n        ('1000000000000', '÷', '1000000', '1000000', '1000000000000 ÷ 1000000 ='),\n    ])\n    def test_calculator_large_number_operations(setup_calculator, num1, operation, num2, expected_result,\n                                                expected_expression):\n        \"\"\"Parametrized test for calculator operations involving large numbers\"\"\"\n        log.info(f\" 'test_calculator_large_number_operations' for {num1} {operation} {num2} has started\")\n    \n        calculator = setup_calculator\n        perform_operation(calculator, num1, operation, num2)\n>       assert_results(calculator, expected_result, expected_expression)\n\ntests/test_calculator.py:145: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncalculator = <pages.calculator_page.CalculatorPage object at 0x7f7c1ccba2f0>\nexpected_result = '1000000', expected_expression = '1000000000000 ÷ 1000000 ='\n\n    def assert_results(calculator, expected_result, expected_expression):\n        \"\"\"\n        Helper function to verify that the result and expression are as expected.\n        \"\"\"\n        time.sleep(1)  # Simulate delay\n    \n        # Verify that the operation is visible for the user on the input calculator field\n        actual_expression = calculator.get_expression_text().replace('−', '-')\n>       assert actual_expression != expected_expression, f\"Expected expression '{expected_expression}', but got '{actual_expression}'\"\nE       AssertionError: Expected expression '1000000000000 ÷ 1000000 =', but got '1000000000000 ÷ 1000000 ='\nE       assert '1000000000000 ÷ 1000000 =' != '1000000000000 ÷ 1000000 ='\n\ntests/test_calculator.py:40: AssertionError","steps":[],"attachments":[{"uid":"a9104291dfed22d7","name":"log","source":"a9104291dfed22d7.txt","type":"text/plain","size":287},{"uid":"21c54bbe40d1108c","name":"stderr","source":"21c54bbe40d1108c.txt","type":"text/plain","size":277}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup_calculator::0","time":{"start":1729344188283,"stop":1729344188284,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"page::0","time":{"start":1729344188285,"stop":1729344188306,"duration":21},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser::0","time":{"start":1729344188307,"stop":1729344188549,"duration":242},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"playwright::0","time":{"start":1729344202242,"stop":1729344202255,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_calculator"},{"name":"host","value":"a3532fa3c304"},{"name":"thread","value":"132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_calculator"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_expression","value":"'1000000000000 ÷ 1000000 ='"},{"name":"expected_result","value":"'1000000'"},{"name":"num1","value":"'1000000000000'"},{"name":"num2","value":"'1000000'"},{"name":"operation","value":"'÷'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":3},"items":[{"uid":"89ef35eb58d0bb37","reportUrl":"https://DinaButko.github.io/calculator/26//#testresult/89ef35eb58d0bb37","status":"passed","time":{"start":1729343934540,"stop":1729343941340,"duration":6800}},{"uid":"e8fabc6a08a6cdd7","reportUrl":"https://DinaButko.github.io/calculator/25//#testresult/e8fabc6a08a6cdd7","status":"passed","time":{"start":1729307112926,"stop":1729307117681,"duration":4755}}]},"tags":[]},"source":"6d91cad718c1832c.json","parameterValues":["'1000000000000 ÷ 1000000 ='","'1000000'","'1000000000000'","'1000000'","'÷'"]}